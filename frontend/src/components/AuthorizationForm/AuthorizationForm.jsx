import { useForm } from "react-hook-form";
import { useNavigate } from "react-router-dom";
import { useDispatch } from "react-redux";
import {
  loginUser,
  registerUser,
  resetPassword,
} from "../../store/actionCreators/authActionCreators";
import style from "./AuthorizationForm.module.css";

const AuthorizationForm = ({ type }) => {
  const navigate = useNavigate();
  const dispatch = useDispatch();

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ react-hook-form
  const {
    register, // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
    handleSubmit, // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    formState: { errors }, // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
  } = useForm();

  // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const onSubmit = async (data) => {
    try {
      if (type === "register" && data.username && data.email && data.fullName) {
        //  –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        const dataRegister = {
          username: data.username,
          email: data.email,
          password: data.password,
          fullName: data.fullName,
        };

        console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", dataRegister);
        await dispatch(registerUser(dataRegister)).unwrap(); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é

        navigate("/login"); // –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
      } else if (type === "login" && data.usernameOrEmail) {
        // –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–≥–∏–Ω, —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        const dataLogin = {
          usernameOrEmail: data.usernameOrEmail,
          password: data.password,
        };

        console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∏–Ω–∞:", dataLogin);
        await dispatch(loginUser(dataLogin)).unwrap(); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª–æ–≥–∏–Ω
        console.log("–£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é");

        setTimeout(() => {
          navigate("/"); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞
        }, 0);
      } else if (type === "reset" && data.usernameOrEmail) {
        // –ï—Å–ª–∏ —ç—Ç–æ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º email –∏–ª–∏ username

        const dataReset = { usernameOrEmail: data.usernameOrEmail };
        console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è:", dataReset);
        await dispatch(resetPassword(dataReset)).unwrap(); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
        navigate("/login"); // –ü–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
    }
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className={style.formContainer}>
      {/* üü¢ –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ type === "register") */}
      {type === "register" && (
        <>
          {/* –ü–æ–ª–µ Email */}
          <input
            type="email"
            {...register("email", { required: "Email is required" })}
            placeholder="Email"
            className={style.input}
          />
          {errors.email && (
            <span className={style.error}>{errors.email.message}</span>
          )}

          {/* –ü–æ–ª–µ –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏ */}
          <input
            {...register("fullName", {
              required: "Name is required",
              maxLength: 32,
            })}
            placeholder="Name"
            className={style.input}
          />
          {errors.fullName && (
            <span className={style.error}>{errors.fullName.message}</span>
          )}

          {/* –ü–æ–ª–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <input
            {...register("username", {
              required: "Username is required",
              maxLength: 24,
            })}
            placeholder="Username"
            className={style.input}
          />
          {errors.username && (
            <span className={style.error}>{errors.username.message}</span>
          )}
        </>
      )}

      {/* üü¢ –§–æ—Ä–º–∞ –ª–æ–≥–∏–Ω–∞ –∏ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∏ type !== "register") */}
      {type !== "register" && (
        <>
          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞ –∏–ª–∏ email */}
          <input
            {...register("usernameOrEmail", {
              required: "Username or email is required",
            })}
            placeholder="Username or email"
            className={style.input}
          />
          {errors.usernameOrEmail && (
            <span className={style.error}>
              {errors.usernameOrEmail.message}
            </span>
          )}
        </>
      )}

      {/* üü¢ –ü–æ–ª–µ –ø–∞—Ä–æ–ª—è (—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è) */}
      {type !== "reset" && (
        <>
          <input
            type="password"
            {...register("password", {
              required: "Password is required",
              minLength: 8,
            })}
            placeholder="Password"
            className={style.input}
          />
          {errors.password && (
            <span className={style.error}>
              Password must be at least 8 characters
            </span>
          )}
        </>
      )}

      {/* üü¢ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã */}
      <button className={style.button} type="submit">
        {type === "register"
          ? "Sign up" // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
          : type === "login"
          ? "Log in" // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Ö–æ–¥–∞
          : "Reset your password"}{" "}
        {/* –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è */}
      </button>
    </form>
  );
};

export default AuthorizationForm;
